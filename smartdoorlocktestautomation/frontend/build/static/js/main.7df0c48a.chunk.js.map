{"version":3,"sources":["views/SplashScreen/index.js","App.js","serviceWorker.js","index.js","redux/actions/index.js","localization/Translate.js","localization/Menu/en/index.js","redux/reducers/initialState.js","localization/Menu/de/index.js","localization/Menu/index.js","localization/Menu/tr/index.js","redux/reducers/index.js","redux/reducers/loading/index.js","redux/reducers/session/index.js","redux/reducers/localization/index.js","redux/reducers/theme/index.js","redux/reducers/error/index.js","redux/reducers/snackbar/index.js","redux/reducers/cache/index.js","redux/store/index.js","assets/img/LoadingPage/biss_splash_screen_door.svg","assets/img/LoadingPage/biss_splash_screen.svg"],"names":["Loading","props","style","display","justifyContent","alignItems","height","width","position","backgroundColor","animationIn","animationOut","animationInDuration","animationOutDuration","isVisible","Grid","container","spacing","direction","item","xs","justify","src","SCREEN","alt","zIndex","DOOR","MasterPage","React","lazy","App","Suspense","fallback","store","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","LOGIN_WAIT","AUTO_LOGIN_FAIL","CHANGE_THEME","AUTO_LOGIN_SUCCESS","CHANGE_LANGUAGE_MENU_TEXT","APP_ERROR","CLEAR_APP_ERROR","AUTO_LOGOUT","HIDE_ERROR","PERMISSION_DENIED","SHOW_SNACKBAR","HIDE_SNACKBAR","SHOW_LOADING","HIDE_LOADING","PAGE_TRANSITION","LOAD_USERS","Translate","lang","this","path","pathSplitted","split","length","result","forEach","e","translate","900","500","700","701","LoadingPage","loadingLabel","LogsTable","idLabel","doorNameLabel","userLabel","actionLabel","dateLabel","timeLabel","logIdentifierLabel","userNameLabel","LoginPage","welcome","loginSuccess","logoutSuccess","loginFail","permissionDenied","autoLoginSuccess","autoLogout","UserSettingsPage","title","addNewUser","editUser","firstName","lastName","passwordStatus","userRole","select","mailAddress","adminType","employeeType","corporateType","usersWillBeDeleted","doYouWantToComplete","progress","addUserSuccess","addUserFail","deleteUserSuccess","deleteUserFail","editUserSuccess","editUserFail","LogsPage","searchPlaceholder","OverviewPage","pageTitle","doorCardTitle","userCardTitle","adminLabel","employeeLabel","corporateLabel","logsCardTitle","Menu","overview","dashboard","license","Profile","myAccount","logOut","SpeedDial","snapshot","Buttons","upload","download","delete","save","login","cancel","ok","retry","Textfield","emailLabel","usernameLabel","passwordLabel","Errors","serverError","networkError","httpError","Snackbar","UserSettings","changePasswordSuccess","ChangePasswordFail","oldPasswordError","changePreferencesSuccess","changePreferencesFail","loading","session","user","firstRender","waiting","theme","language","menu","error","show","status","message","snackbar","messageType","cache","doors","users","reducers","state","initialState","action","type","types","data","menuLang","combineReducers","createStore","RootReducer","InitialState","applyMiddleware","thunk","module","exports"],"mappings":"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","file":"static/js/main.7df0c48a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"assets/css/animate.css\";\r\nimport { Animated } from \"react-animated-css\";\r\nimport DOOR from \"assets/img/LoadingPage/biss_splash_screen_door.svg\";\r\nimport SCREEN from \"assets/img/LoadingPage/biss_splash_screen.svg\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nexport default function Loading(props) {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100vh\",\r\n        width: \"100vw\",\r\n        position: \"relative\",\r\n        backgroundColor: \"#008AA8\"\r\n      }}\r\n    >\r\n      <Animated\r\n        animationIn=\"fadeIn\"\r\n        animationOut=\"fadeOut\"\r\n        animationInDuration={1500}\r\n        animationOutDuration={1000}\r\n        isVisible={true}\r\n      >\r\n        <Grid container spacing={0} direction=\"row\" style={{ width: \"60vw\" }}>\r\n          <Grid item xs={5} container justify=\"flex-end\">\r\n            <img src={SCREEN} alt=\"LOGO\" style={{ width: \"100%\" }} />\r\n          </Grid>\r\n          <Grid item xs={2} container justify=\"center\">\r\n            <div style={{height : \"65vh\", width: \"10px\", backgroundColor:\"white\", zIndex : 100}}/>\r\n          </Grid>\r\n          <Grid item xs={5} container justify=\"flex-start\">\r\n            <img src={DOOR} alt=\"DOOR\" style={{ width: \"100%\" }} />\r\n          </Grid>\r\n        </Grid>\r\n      </Animated>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"redux/store\";\r\nimport SplashScreen from \"views/SplashScreen\";\r\n\r\nconst MasterPage = React.lazy(() => import(\"views/MasterPage\"));\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Suspense fallback={<SplashScreen />}>\r\n      <Provider store={store}>\r\n        <MasterPage />\r\n      </Provider>\r\n    </React.Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const LOGIN_WAIT = 'LOGIN_WAIT';\r\nexport const AUTO_LOGIN_FAIL = \"AUTO_LOGIN_FAIL\";\r\nexport const CHANGE_THEME=\"CHANGE_THEME\";\r\nexport const AUTO_LOGIN_SUCCESS = \"AUTO_LOGIN_SUCCESS\";\r\nexport const CHANGE_LANGUAGE_MENU_TEXT=\"CHANGE_LANGUAGE_MENU_TEXT\";\r\nexport const APP_ERROR = \"APP_ERROR\";\r\nexport const CLEAR_APP_ERROR = \"CLEAR_APP_ERROR\";\r\nexport const AUTO_LOGOUT = \"AUTO_LOGOUT\";\r\nexport const HIDE_ERROR = \"HIDE_ERROR\";\r\nexport const PERMISSION_DENIED = \"PERMISSION_DENIED\";\r\nexport const SHOW_SNACKBAR = \"SHOW_SNACKBAR\";\r\nexport const HIDE_SNACKBAR = \"HIDE_SNACKBAR\";\r\nexport const SHOW_LOADING = \"SHOW_LOADING\";\r\nexport const HIDE_LOADING = \"HIDE_LOADING\";\r\nexport const PAGE_TRANSITION = \"PAGE_TRANSITION\";\r\nexport const LOAD_USERS = \"LOAD_USERS\";\r\n\r\n ","class Translate {\r\n  constructor(lang) {\r\n    this.lang = lang;\r\n  }\r\n\r\n  get(path) {\r\n    if(!path) {\r\n      return \"Error: undefined parameter\"\r\n    }\r\n    if(typeof(path) === 'number') {\r\n      return this.lang[path];\r\n    }\r\n    let pathSplitted = path.split(\".\");\r\n    if (pathSplitted.length === 1) {\r\n      let result = this.lang[pathSplitted[0]];\r\n      return (\r\n        (typeof result === \"string\" && result) || \"missing localization:\" + path\r\n      );\r\n    }\r\n    let result = this.lang;\r\n    try {\r\n      pathSplitted.forEach(item => {\r\n        result = result[item];\r\n      });\r\n    } catch (e) {\r\n      result = \"missing locatizatin:\" + path;\r\n    }\r\n    if (!result || typeof result !== \"string\") {\r\n      return \"missing locatizatin:\" + path;\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default Translate;\r\n","import Translate from \"localization/Translate\"\r\n\r\nconst EN = {\r\n  900: \"Request Failed!\",\r\n  500: \"Internal Server Error\",\r\n  700 : \"Network Error\",\r\n  701 : \"Timeout Error !\",\r\n  LoadingPage : {\r\n    loadingLabel: \"Loading...\"\r\n  },\r\n  LogsTable : {\r\n    idLabel : \"Log ID\",\r\n    doorNameLabel : \"Door Name\",\r\n    userLabel : \"User\",\r\n    actionLabel : \"Action\",\r\n    dateLabel : \"Date\",\r\n    timeLabel : \"Time\",\r\n    logIdentifierLabel : \"Log Identifier\",\r\n    userNameLabel : \"Username\"\r\n  },\r\n  LoginPage : {\r\n    welcome: \"W e l c o m e\",\r\n    loginSuccess: \"Successfuly logged in.\",\r\n    logoutSuccess:\"Sucessfully logged out.\",\r\n    loginFail: \"Incorrect username or password\",\r\n    permissionDenied: \"Permission denied.\",\r\n    autoLoginSuccess : \"You have been autotomatically logged in.\",\r\n    autoLogout: \"You have been automatically logged out.\",\r\n  },\r\n  UserSettingsPage : {\r\n    title : \"User Settings\",\r\n    addNewUser : \"Add New User\",\r\n    editUser : \"Edit User\",\r\n    firstName : \"Name\",\r\n    lastName : \"Lastname\",\r\n    passwordStatus : \"Password Status\",\r\n    userRole : \"User Role\",\r\n    select : \"Select\",\r\n    mailAddress : \"Mail Address\",\r\n    adminType : \"Admin\",\r\n    employeeType : \"Employee\",\r\n    corporateType : \"Corporate\",\r\n    usersWillBeDeleted : \"Users will be deleted!\",\r\n    doYouWantToComplete : \"Do you want to complete\",\r\n    progress : \"progress?\",\r\n    addUserSuccess : \"User successfuly created.\",\r\n    addUserFail : \"User could not be created !\",\r\n    deleteUserSuccess : \"Deleted users successfully.\",\r\n    deleteUserFail : \"Failed to delete user !\",\r\n    editUserSuccess : \"Successfully edited user.\",\r\n    editUserFail : \"Failed to edit user !\"\r\n  },\r\n  LogsPage : {\r\n    title : \"Logs\",\r\n    searchPlaceholder : \"Search...\",\r\n  },\r\n  OverviewPage : {\r\n    pageTitle : \"Overview\",\r\n    doorCardTitle : \"Door\",\r\n    userCardTitle : \"Users\",\r\n    adminLabel : \"Admin\",\r\n    employeeLabel : \"Employee\",\r\n    corporateLabel : \"Corporate\",\r\n    logsCardTitle : \"Log\",\r\n    \"door0\" : \"Open\",\r\n    \"door1\" : \"Closed / Unlocked\",\r\n    \"door2\" : \"Closed / Locked\",\r\n    \"door3\" : \"Busy\",\r\n    \"door4\" : \"Busy\",\r\n    \"door-1\" : \"Disconnected\",\r\n  },\r\n  Menu: {\r\n    overview: \"Overview English\",\r\n    dashboard: \"Dashboard\",\r\n    license: \"License\",\r\n    Profile: {\r\n      myAccount: \"My Account\",\r\n      logOut: \"Log Out\"\r\n    }\r\n  },\r\n  SpeedDial: {\r\n    snapshot: \"Snapshot\"\r\n  },\r\n  Buttons: {\r\n    upload: \"Upload\",\r\n    download: \"Download\",\r\n    delete: \"Delete\",\r\n    save: \"Save\",\r\n    login: \"Login\",\r\n    cancel: \"Cancel\",\r\n    ok: \"OK\",\r\n    retry: \"Retry\"\r\n  },\r\n  Textfield: {\r\n    emailLabel: \"Email\",\r\n    usernameLabel: \"Username\",\r\n    passwordLabel: \"Password\"\r\n  },\r\n  Errors: {\r\n    serverError: \"Server encountered an error!\",\r\n    networkError : \"Network Error\",\r\n    httpError: \"Http request failed!\"\r\n  },\r\n  Snackbar:{\r\n    UserSettings:{\r\n      changePasswordSuccess:\"Password successfully changed.\",\r\n      ChangePasswordFail:{\r\n        oldPasswordError:\"Password is incorrect.\",\r\n        serverError:\"Password could not change, internal server error.\"\r\n      },\r\n      changePreferencesSuccess:\"Preferences succesfully changed.\",\r\n      changePreferencesFail:\"Preferences didn't change.\"\r\n    }\r\n  }\r\n};\r\n\r\nconst translate = new Translate(EN);\r\n\r\nexport default translate;\r\n","import en from \"localization/Menu/en\";\r\n\r\nexport default {\r\n  loading : 0,\r\n  session : {\r\n    autoLogout : false,\r\n    autoLoginSuccess : false,\r\n    permissionDenied : false,\r\n    user : null, // if defined => user logged in\r\n    loginFail : false,\r\n    logoutSuccess : false,\r\n    firstRender : true,\r\n    waiting : false\r\n  },\r\n  theme : \"light\",\r\n  language: {\r\n    menu: en\r\n  },\r\n  error : {\r\n    show : false,\r\n    status : null,\r\n    message : null\r\n  },\r\n  snackbar:{\r\n    message : null,\r\n    messageType : null,\r\n    show:false\r\n  },\r\n  cache : {\r\n    doors : [],\r\n    users : []\r\n  }\r\n};\r\n","import Translate from \"localization/Translate\"\r\n\r\nconst DE = {\r\n  LoginPage : {\r\n    welcome: \"W i l c o m m e n\"\r\n  },\r\n  Menu: {\r\n    overview: \"Overview English\",\r\n    dashboard: \"Dashboard\",\r\n    license: \"License\",\r\n    Profile: {\r\n      myAccount: \"My Account\",\r\n      logOut: \"Log Out\"\r\n    }\r\n  },\r\n  SpeedDial: {\r\n    snapshot: \"Znapjöt\"\r\n  },\r\n  Buttons: {\r\n    upload: \"Upload\",\r\n    download: \"Download\",\r\n    delete: \"Delete\",\r\n    save: \"Save\",\r\n    login: \"Zuckerberg\",\r\n    cancel: \"Cancel\",\r\n    ok: \"OK\",\r\n    retry: \"Retry\"\r\n  },\r\n  Textfield: {\r\n    emailLabel: \"Dein Email\",\r\n    usernameLabel: \"Username\",\r\n    passwordLabel: \"Pazzwürd\"\r\n  },\r\n  Errors: {\r\n    serverError: \"Server encountered and error!\",\r\n    httpError: \"Http request failed!\",\r\n    loginFail: \"Incorrect username or password\",\r\n    permissionDenied: \"Permission denied.\"\r\n  }\r\n};\r\n\r\nconst translate = new Translate(DE);\r\n\r\nexport default translate;\r\n","import EN from \"./en\";\r\nimport DE from \"./de\";\r\nimport TR from \"./tr\";\r\n\r\nconst translate = \r\n{\r\n        \"en\":EN,\r\n        \"de\":DE,\r\n        \"tr\":TR\r\n};\r\n\r\nexport default translate;\r\n","import Translate from \"localization/Translate\"\r\n\r\nconst TR = {\r\n  LoginPage : {\r\n    welcome: \"H o ş g e l d i n\"\r\n  },\r\n  Menu: {\r\n    overview: \"Overview English\",\r\n    dashboard: \"Dashboard\",\r\n    license: \"License\",\r\n    Profile: {\r\n      myAccount: \"My Account\",\r\n      logOut: \"Log Out\"\r\n    }\r\n  },\r\n  SpeedDial: {\r\n    snapshot: \"Anlık Foto\"\r\n  },\r\n  Buttons: {\r\n    upload: \"Yükle\",\r\n    download: \"İndir\",\r\n    delete: \"Sil\",\r\n    save: \"Kaydet\",\r\n    login: \"Giriş\",\r\n    cancel: \"İptal\",\r\n    ok: \"Tamam\",\r\n    retry: \"Yeniden Dene\"\r\n  },\r\n  Textfield: {\r\n    emailLabel: \"Elektronik Posta Adresi\",\r\n    usernameLabel: \"Kullanıcı Adı\",\r\n    passwordLabel: \"Şifre\"\r\n  },\r\n  Errors: {\r\n    serverError: \"Server encountered and error!\",\r\n    httpError: \"Http request failed!\",\r\n    loginFail: \"Incorrect username or password\",\r\n    permissionDenied: \"Permission denied.\"\r\n  }\r\n};\r\n\r\nconst translate = new Translate(TR);\r\n\r\nexport default translate;\r\n","import { combineReducers } from \"redux\";\r\nimport sessionReducer from \"redux/reducers/session\";\r\nimport languageReducer from \"redux/reducers/localization\";\r\nimport themeReducer from \"redux/reducers/theme\";\r\nimport errorReducer from \"redux/reducers/error\";\r\nimport snackBarReducer from \"redux/reducers/snackbar\";\r\nimport loadingReducer from \"redux/reducers/loading\";\r\nimport cacheReducer from \"redux/reducers/cache\";\r\n\r\nconst reducers = {\r\n    loading : loadingReducer,\r\n    session : sessionReducer,\r\n    language : languageReducer,\r\n    theme : themeReducer,\r\n    error : errorReducer,\r\n    snackbar:snackBarReducer,\r\n    cache : cacheReducer\r\n };\r\nexport default combineReducers(reducers);","import { APP_ERROR, SHOW_LOADING, HIDE_LOADING, AUTO_LOGOUT, PAGE_TRANSITION } from \"redux/actions/index\";\r\nimport initialState from \"redux/reducers/initialState\";\r\n\r\n// TODO: reset loading to 0 after page transition\r\nexport default function redurcerLoading(state = initialState, action) {\r\n  switch (action.type) {\r\n    case APP_ERROR: {\r\n      return 0\r\n    }\r\n    case HIDE_LOADING: {\r\n        return state - 1\r\n    }\r\n    case SHOW_LOADING: {\r\n        return state + 1\r\n    }\r\n    case AUTO_LOGOUT: {\r\n      return 0\r\n    }\r\n    case PAGE_TRANSITION : {\r\n      return 0\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import * as types from \"redux/actions\";\r\nimport initialState from \"redux/reducers/initialState\";\r\n\r\nexport default function sessionReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.LOGIN_WAIT:\r\n      return {\r\n        ...state,\r\n        waiting : true\r\n      };\r\n    case types.LOGOUT_SUCCESS:\r\n      return { ...state, logoutSuccess: true, waiting:false, user: null };\r\n    case types.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: {...action.data},\r\n        waiting: false\r\n      };\r\n    case types.LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        loginFail : true,\r\n        permissionDenied : false,\r\n        waiting : false\r\n      };\r\n    case types.PERMISSION_DENIED:\r\n      return {\r\n        ...state,\r\n        permissionDenied : true,\r\n        loginFail : false,\r\n        waiting : false,\r\n      }\r\n    case types.AUTO_LOGOUT:\r\n      return {\r\n        ...state,\r\n        autoLogout : true,\r\n        user : null,\r\n        firstRender : false\r\n      }\r\n    case types.APP_ERROR:\r\n      return {...state, firstRender : false, waiting: false}\r\n    case types.HIDE_SNACKBAR:\r\n      return {...state, autoLogout : false, waiting: false, autoLoginSuccess : false, logoutSuccess : false}\r\n    case types.AUTO_LOGIN_FAIL: \r\n      return {...state, firstRender:false, autoLoginSuccess:false, waiting : false}\r\n    case types.AUTO_LOGIN_SUCCESS:\r\n      return {...state, firstRender : false, autoLoginSuccess : true, user : {...action.data}, waiting:false}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { CHANGE_LANGUAGE_MENU_TEXT } from \"redux/actions/index\";\r\nimport menuLang from \"localization/Menu\"\r\n\r\nimport initialState from \"redux/reducers/initialState\";\r\n\r\nexport default function reducerLanguage(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CHANGE_LANGUAGE_MENU_TEXT: {\r\n      return {\r\n        menu : menuLang[action.data]\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import \r\n    {CHANGE_THEME}\r\n   from \"redux/actions/index\";\r\n  import initialState from \"redux/reducers/initialState\";\r\n  \r\n  export default function reducerTheme(state = initialState, action) {\r\n    switch (action.type) {\r\n      case CHANGE_THEME: \r\n        return \"\" + (state === \"dark\" ? \"light\" : \"dark\")\r\n      default: {\r\n        return state;\r\n      }\r\n    }\r\n  }\r\n  ","import { APP_ERROR, HIDE_ERROR, HIDE_SNACKBAR, CLEAR_APP_ERROR } from \"redux/actions/index\";\r\nimport initialState from \"redux/reducers/initialState\";\r\n\r\nexport default function reducerError(state = initialState, action) {\r\n  switch (action.type) {\r\n    case APP_ERROR: {\r\n      return {\r\n        status : action.data.status,\r\n        message : action.data.message,\r\n        show : true\r\n      };\r\n    }\r\n    case HIDE_ERROR: {\r\n      return {\r\n        ...state,\r\n        show : false\r\n      }\r\n    }\r\n    case HIDE_SNACKBAR: {\r\n      return {\r\n        ...state,\r\n        show : false\r\n      }\r\n    }\r\n    case CLEAR_APP_ERROR: {\r\n      return {\r\n        status : null,\r\n        message : null,\r\n        show : false\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import { SHOW_SNACKBAR, HIDE_SNACKBAR } from \"redux/actions\";\r\nimport initialState from \"redux/reducers/initialState\";\r\n\r\nexport default function snackbarReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SHOW_SNACKBAR:\r\n      return {\r\n        ...state,\r\n        message: action.message,\r\n        messageType: action.messageType,\r\n        show: true\r\n      };\r\n    case HIDE_SNACKBAR:\r\n      return {\r\n        ...state,\r\n        show: false\r\n      };\r\n    default:\r\n      return {\r\n        ...state\r\n      };\r\n  }\r\n}\r\n","import {LOAD_USERS} from \"redux/actions\";\r\nimport initialState from \"redux/reducers/initialState\";\r\n\r\nexport default function reducerCache(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_USERS : {\r\n      return {\r\n        doors : [\r\n          ...state.doors\r\n        ],\r\n        users : action.data\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport RootReducer from \"redux/reducers\";\r\nimport InitialState from \"redux/reducers/initialState\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(RootReducer, InitialState, applyMiddleware(thunk));\r\nexport default store;\r\n","module.exports = __webpack_public_path__ + \"static/media/biss_splash_screen_door.5ee7f440.svg\";","module.exports = __webpack_public_path__ + \"static/media/biss_splash_screen.e5fa57f6.svg\";"],"sourceRoot":""}